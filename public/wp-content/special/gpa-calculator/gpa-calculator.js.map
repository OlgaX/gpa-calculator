{"version":3,"sources":["webpack:///gpa-calculator.js","webpack:///webpack/bootstrap 884cffb525bddc339eff","webpack:///./src/gpa-calculator.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","jQuery","$","__WEBPACK_AMD_REQUIRE_ARRAY__","initSelectizePlugin","grade_opts","options","GPA_data","grade","optgroups","value","label","valueField","labelField","searchField","sortField","optgroupField","plugins","this","selectize","courses_opts","courses","create","course_types_opts","course_types","init","new_tpl","find","addCollegeClass","$container","closest","params","class_id","children","tpl","GPA_tpl","college_class","html","contents","append","selectizePlugin","addCollegeSemester","semester_id","data","tpl_class","college_semester","text","removeAttr","attr","target","is_sent_email","addClass","show","common_result","removeCollegeSemester","$semester","remove","hide","calculateCollegeGPA","calculate_common_result","$result","tmp","credits","each","elem","val","count","total","total_credits","gpa_result","Math","round","parseFloat","toFixed","checkNumber","test","String","fromCharCode","charCode","addHSchoolCourse","course_id","hschool_course","calculateHScoolGPA","$courses","total_courses","showEmailField","form","email","after","checkEmail","re","validateEmail","$this","removeClass","is_valid_email","validateFields","result","$first_row","first","$elements","error","sendEmail","form_name","ajax","url","method","done","localStorage","setItem","JSON","stringify","college","hschool","methods","settings","extend","parse","getItem","widget","college_tpl","tpl_semester","on","high_school_tpl","tpl_course","keyCode","bind","fn","gpaCalculator","Array","prototype","slice","arguments"],"mappings":"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","file":"gpa-calculator.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".gpa-calculator.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/wp-content/special/gpa-calculator/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__.e/* require */(0, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [ __webpack_require__(2), __webpack_require__(1), __webpack_require__(7)]; (function () {\r\n\t\r\n\t__webpack_require__(10);\r\n\t\r\n\t//$.fn.gpaCalculator plugin\r\n\t(function( $ ){\r\n\t  //DATA\r\n\t  //--------------------------------------------------\r\n\t  var GPA_data = {\r\n\t    grade : __webpack_require__(19),\r\n\t    courses : __webpack_require__(18),\r\n\t    course_types:  __webpack_require__(17)\r\n\t  }\r\n\t\r\n\t  var GPA_tpl = {\r\n\t    college : __webpack_require__(13),\r\n\t    college_class : __webpack_require__(11),\r\n\t    college_semester :  __webpack_require__(12),\r\n\t\r\n\t    hschool : __webpack_require__(16),\r\n\t    hschool_course: __webpack_require__(15),\r\n\t\r\n\t    email: __webpack_require__(14)\r\n\t  }\r\n\t\r\n\t  var selectizePlugin;\r\n\t\r\n\t  //METHODS\r\n\t  //--------------------------------------------------\r\n\t  var methods = {\r\n\t    init : function( options ) {\r\n\t      var settings = $.extend( {\r\n\t        form : 'college' // college, high-school, all-widgets\r\n\t      }, options);\r\n\t\r\n\t      return this.each(function() {\r\n\t        var $this = $(this);\r\n\t        var data = $this.data('gpa');\r\n\t\r\n\t        if ( data ) return false;\r\n\t\r\n\t        $this.data('gpa', {\r\n\t          target: $this,\r\n\t          is_sent_email: JSON.parse(localStorage.getItem(\"gpa_is_sent_email\")) || false, //get data from localStorage\r\n\t          is_valid_email: false,\r\n\t          common_result: '',\r\n\t          semester_id: 1\r\n\t        });\r\n\t\r\n\t        var widget = $('<div/>');\r\n\t\r\n\t        data = $this.data('gpa');\r\n\t\r\n\t        if (settings.form === 'college' || settings.form === 'all-widgets') {\r\n\t          //apply college template\r\n\t          var college_tpl = GPA_tpl.college;\r\n\t          var params = {\r\n\t            grade: GPA_data.grade,\r\n\t            tpl_semester: GPA_tpl.college_semester,\r\n\t            tpl_class: GPA_tpl.college_class\r\n\t          };\r\n\t\r\n\t          widget.append(college_tpl(params));\r\n\t\r\n\t          //handler: add new class (college)\r\n\t          $this.on('click.gpa', '[data-gpa-college=add-class-btn]', addCollegeClass);\r\n\t\r\n\t          //handler: add new semester (college)\r\n\t          var params = {\r\n\t            target: data.target,\r\n\t            semester_id: data.semester_id\r\n\t          };\r\n\t          $this.on('click.gpa', '[data-gpa-college=add-semester-btn]', params, addCollegeSemester);\r\n\t\r\n\t          //handler: remove semester (college)\r\n\t          $this.on('click.gpa', '[data-gpa-college=remove-semester-btn]', removeCollegeSemester);\r\n\t\r\n\t          //handler: calculate GPA for 1 semester (college)\r\n\t          $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits]', calculateCollegeGPA);\r\n\t          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa=email-send-btn]', calculateCollegeGPA);\r\n\t\r\n\t          //handler: calculate GPA for all semesters (college)\r\n\t          var params = {\r\n\t            target: data.target,\r\n\t            calculate_common_result: true\r\n\t          };\r\n\t          $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits]', params, calculateCollegeGPA);\r\n\t          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-college=remove-semester-btn]', params, calculateCollegeGPA);\r\n\t\r\n\t          //hendler: allow input only of numbers in the field of gpa-credits\r\n\t          $this.on('keypress.gpa', '[data-gpa-college=credits]', checkNumber);\r\n\t        }\r\n\t\r\n\t        if (settings.form === 'high-school' || settings.form === 'all-widgets') {\r\n\t          //apply high-school template\r\n\t          var high_school_tpl = GPA_tpl.hschool;\r\n\t          var params = {\r\n\t            grade: GPA_data.grade,\r\n\t            courses: GPA_data.courses,\r\n\t            course_types: GPA_data.course_types,\r\n\t            tpl_course: GPA_tpl.hschool_course\r\n\t          };\r\n\t\r\n\t          widget.append(high_school_tpl(params));\r\n\t\r\n\t          //handler: add new course (hschool)\r\n\t          $this.on('click.gpa', '[data-gpa-hschool=add-course-btn]', addHSchoolCourse);\r\n\t\r\n\t          //handler: calculate GPA (hschool)\r\n\t          $this.on('change.gpa', '[data-gpa-hschool=grade], [data-gpa-hschool=course-types]', calculateHScoolGPA);\r\n\t          $this.on('click.gpa', '[data-gpa-hschool=calculate-btn]', calculateHScoolGPA);\r\n\t        }\r\n\t\r\n\t        //handler: show error if empty fields\r\n\t        var params = {\r\n\t          error: 'show'\r\n\t        };\r\n\t        $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', params, validateFields);\r\n\t        var params = {\r\n\t          error: 'hide'\r\n\t        };\r\n\t        $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits], [data-gpa-hschool=grade], [data-gpa-hschool=course-types]', params, validateFields);\r\n\t\r\n\t        //if user didn't send the email yet (get data from localStorage)\r\n\t        if (!data.is_sent_email) {\r\n\t          //hide GPA result blocks\r\n\t          $('[data-gpa-college=result-block], [data-gpa-hschool=result-block]', widget).addClass(\"gpa-result-disabled\");\r\n\t\r\n\t          //handler: show email field\r\n\t          var params = {\r\n\t            target: data.target\r\n\t          };\r\n\t          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', params, showEmailField);\r\n\t\r\n\t          //handler: show error if email not valid\r\n\t          var params = {\r\n\t            target: data.target\r\n\t          };\r\n\t          $this.on('keyup.gpa', '[data-gpa=email]', params, validateEmail);\r\n\t\r\n\t          //handler: send email\r\n\t          var params = {\r\n\t            target: data.target\r\n\t          };\r\n\t          $this.on('click.gpa', '[data-gpa=email-send-btn]', params, sendEmail);\r\n\t          $this.on('keydown.gpa', '[data-gpa=email]', params, function(e) {\r\n\t            if (e.keyCode === 13) sendEmail.bind(this)(e);\r\n\t          });\r\n\t        }\r\n\t\r\n\t        //render\r\n\t        $this.html(widget.contents());\r\n\t\r\n\t        //init selectize jquery plugin\r\n\t        selectizePlugin = initSelectizePlugin.bind($this)();\r\n\t\r\n\t      });\r\n\t    }\r\n\t  };\r\n\t\r\n\t  $.fn.gpaCalculator = function( method ) {\r\n\t    if ( methods[method] ) {\r\n\t      return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));\r\n\t    } else if ( typeof method === 'object' || ! method ) {\r\n\t      return methods.init.apply( this, arguments );\r\n\t    } else {\r\n\t      $.error( 'Method ' + method + ' does not exist on jQuery.gpaCalculator' );\r\n\t    }\r\n\t  };\r\n\t\r\n\t  //INIT SELECTIZE JQUERY PLUGIN\r\n\t  //--------------------------------------------------\r\n\t  function initSelectizePlugin () {\r\n\t    var grade_opts = {\r\n\t      options: GPA_data.grade,\r\n\t      optgroups: [\r\n\t        {value: 'A', label: 'A'},\r\n\t        {value: 'B', label: 'B'},\r\n\t        {value: 'C', label: 'C'},\r\n\t        {value: 'D', label: 'D'},\r\n\t        {value: 'F', label: 'F'}\r\n\t      ],\r\n\t      valueField: 'value',\r\n\t      labelField: 'label',\r\n\t      searchField: 'label',\r\n\t      sortField: 'id',\r\n\t      optgroupField:'group',\r\n\t      plugins: ['optgroup_columns'],\r\n\t    };\r\n\t\r\n\t    $('[data-gpa-college=grade], [data-gpa-hschool=grade]', $(this)).selectize(grade_opts);\r\n\t\r\n\t    var courses_opts = {\r\n\t      options: GPA_data.courses,\r\n\t      valueField: 'id',\r\n\t      labelField: 'label',\r\n\t      searchField: 'label',\r\n\t      create: true\r\n\t    };\r\n\t\r\n\t    $('[data-gpa-hschool=courses]', $(this)).selectize(courses_opts);\r\n\t\r\n\t    var course_types_opts = {\r\n\t      options: GPA_data.course_types,\r\n\t      valueField: 'value',\r\n\t      labelField: 'label',\r\n\t      searchField: 'label'\r\n\t    };\r\n\t\r\n\t    $('[data-gpa-hschool=course-types]', $(this)).selectize(course_types_opts);\r\n\t\r\n\t    return {\r\n\t      init: function(new_tpl) {\r\n\t        $(new_tpl).find('[data-gpa-college=grade], [data-gpa-hschool=grade]').selectize(grade_opts);\r\n\t        $(new_tpl).find('[data-gpa-hschool=courses]').selectize(courses_opts);\r\n\t        $(new_tpl).find('[data-gpa-hschool=course-types]').selectize(course_types_opts);\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //HANDLERS\r\n\t  //--------------------------------------------------\r\n\t  //handler: add new class (college)\r\n\t  function addCollegeClass () {\r\n\t    var $container = $(this).closest('[data-gpa-college=form-wrap]').find('[data-gpa-college=classes-wrap]');\r\n\t    var params = {\r\n\t      class_id: ++$container.children().length,\r\n\t      grade: GPA_data.grade\r\n\t    };\r\n\t    var tpl = GPA_tpl.college_class(params);\r\n\t    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n\t    $container.append(tpl);\r\n\t\r\n\t    //selectize plugin init for new elements\r\n\t    if (selectizePlugin) selectizePlugin.init(tpl);\r\n\t  };\r\n\t\r\n\t  //handler: add new semester (college)\r\n\t  function addCollegeSemester (e) {\r\n\t    var $container = $(this).closest('[data-gpa-college=semesters-wrap]');\r\n\t    var params = {\r\n\t      semester_id: ++e.data.semester_id,\r\n\t      grade: GPA_data.grade,\r\n\t      tpl_class: GPA_tpl.college_class\r\n\t    };\r\n\t    var tpl = GPA_tpl.college_semester(params);\r\n\t    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n\t    $container.append(tpl);\r\n\t\r\n\t    //change \"Add semester\" btn to \"Remove semester\"\r\n\t    $(this).text('Remove semester').removeAttr('data-gpa-college').attr('data-gpa-college','remove-semester-btn');\r\n\t\r\n\t    var data =  e.data.target.data('gpa');\r\n\t\r\n\t    //fide result for new semester if user didn't send the email yet\r\n\t    if (!data.is_sent_email) {\r\n\t      $('[data-gpa-college=result-block]', $container).addClass('gpa-result-disabled');\r\n\t    }\r\n\t\r\n\t    //show common result for all semesters\r\n\t    if (data.is_sent_email && $container.children().length > 1) {\r\n\t      $('[data-gpa-college=common-result-block]', $container).show()\r\n\t      .find('[data-gpa-college=common-result]').text(data.common_result);\r\n\t    }\r\n\t\r\n\t    //selectize plugin init for new elements\r\n\t    if (selectizePlugin) selectizePlugin.init(tpl);\r\n\t  }\r\n\t\r\n\t  //handler: remove semester (college)\r\n\t  function removeCollegeSemester () {\r\n\t    var $semester = $(this).closest('[data-gpa-college=semester]');\r\n\t    var $container = $semester.closest('[data-gpa-calculator=college]');\r\n\t    $semester.remove();\r\n\t\r\n\t    if ($container.find('[data-gpa-college=semesters-wrap]').children().length === 1) {\r\n\t      $('[data-gpa-college=common-result-block]', $container).hide();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //handler: calculate GPA (college)\r\n\t  //for 1 or all semesters\r\n\t  function calculateCollegeGPA (e) {\r\n\t    //define what data will be counted and where the result will be written\r\n\t    var calculate_common_result = e.data && e.data.calculate_common_result;\r\n\t\r\n\t    if (calculate_common_result) {\r\n\t      var data =  e.data.target.data('gpa');\r\n\t      var $container =  e.data.target.data('gpa').target.find('[data-gpa-calculator=college]');\r\n\t      var $result = $('[data-gpa-college=common-result]', $container);\r\n\t    } else {\r\n\t      var $container = $(this).closest('[data-gpa-college=form-wrap]');\r\n\t      var $result = $('[data-gpa-college=result]', $container);\r\n\t    }\r\n\t\r\n\t    //save data in a temporary storage\r\n\t    var tmp = {};\r\n\t    tmp.grade = [];\r\n\t    tmp.credits = [];\r\n\t\r\n\t    $('[data-gpa-college=fields-row]', $container).each(function(i, elem){\r\n\t      tmp.grade[i] = +$('[data-gpa-college=grade]', this).val();\r\n\t      tmp.credits[i] = +$('[data-gpa-college=credits]', this).val();\r\n\t    });\r\n\t\r\n\t    //calculating\r\n\t    var count = tmp.grade.length,\r\n\t      total = 0,\r\n\t      total_credits = 0,\r\n\t      gpa_result = 0;\r\n\t\r\n\t    while (count){\r\n\t      count--;\r\n\t      if (!tmp.grade[count] || !tmp.credits[count]) continue;\r\n\t      total += tmp.grade[count]*tmp.credits[count];\r\n\t      total_credits += tmp.credits[count];\r\n\t    }\r\n\t\r\n\t    gpa_result = Math.round(parseFloat(total/total_credits) * 100) / 100 || 0;\r\n\t    gpa_result = gpa_result.toFixed(2);\r\n\t\r\n\t    //show result\r\n\t    $result.text(gpa_result);\r\n\t\r\n\t    //save common result in \"data\" property of the target element\r\n\t    if (calculate_common_result) data.common_result = gpa_result;\r\n\t  };\r\n\t\r\n\t  //handler: allow input only of numbers in the field of gpa-credits\r\n\t  function checkNumber (e) {\r\n\t    return (/[0-9]/.test(String.fromCharCode(e.charCode)));\r\n\t  }\r\n\t\r\n\t  //handler: add new course (hschool)\r\n\t  function addHSchoolCourse () {\r\n\t    var $container = $(this).closest('[data-gpa-hschool=form-wrap]').find('[data-gpa-hschool=courses-wrap]');\r\n\t    var params = {\r\n\t      grade: GPA_data.grade,\r\n\t      courses: GPA_data.courses,\r\n\t      course_types: GPA_data.course_types,\r\n\t      course_id: ++$container.children().length\r\n\t    };\r\n\t    var tpl = GPA_tpl.hschool_course(params);\r\n\t    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n\t    $container.append(tpl);\r\n\t\r\n\t    //selectize plugin init for new elements\r\n\t    if (selectizePlugin) selectizePlugin.init(tpl);\r\n\t  };\r\n\t\r\n\t  //handler: calculate GPA (hschool)\r\n\t  function calculateHScoolGPA () {\r\n\t    var $container = $(this).closest('[data-gpa-hschool=form-wrap]');\r\n\t\r\n\t    //save data in a temporary storage\r\n\t    var data = {};\r\n\t    data.grade = [];\r\n\t    data.course_types = [];\r\n\t\r\n\t    var $courses = $container.find('[data-gpa-hschool=courses-wrap]');\r\n\t\r\n\t    $('[data-gpa-hschool=fields-row]', $courses).each(function(i, elem){\r\n\t      data.grade[i] = +$('[data-gpa-hschool=grade]', this).val();\r\n\t      data.course_types[i] = +$('[data-gpa-hschool=course-types]', this).val();\r\n\t    });\r\n\t\r\n\t    //calculating\r\n\t    var count = data.grade.length,\r\n\t      total = 0,\r\n\t      total_courses = 0,\r\n\t      gpa_result = 0;\r\n\t\r\n\t    while (count){\r\n\t      count--;\r\n\t      if (!data.grade[count]) continue;\r\n\t      total += data.grade[count]+data.course_types[count];\r\n\t      total_courses += 1;\r\n\t    }\r\n\t    gpa_result = Math.round(parseFloat(total/total_courses) * 100) / 100 || 0;\r\n\t    gpa_result = gpa_result.toFixed(2)\r\n\t\r\n\t    //show result\r\n\t    $('[data-gpa-hschool=result]', $container).text(gpa_result);\r\n\t  };\r\n\t\r\n\t  //handler: show email field\r\n\t  function showEmailField (e) {\r\n\t    var data =  e.data.target.data('gpa');\r\n\t\r\n\t    //show field with email only once (before showing result)\r\n\t    if (data.is_sent_email) return false;\r\n\t\r\n\t    //define in what container the \"calculate\" btn was clicked\r\n\t    var form = $(this).attr('data-gpa-college') ? 'data-gpa-college' : 'data-gpa-hschool';\r\n\t    var $container = $(this).closest('['+form+'=form-wrap]');\r\n\t\r\n\t    //show email field\r\n\t    var tpl = GPA_tpl.email;\r\n\t    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n\t    $('['+form+'=calculate-btn]', $container).hide().after(tpl);\r\n\t  };\r\n\t\r\n\t  //handler: show error if email not valid\r\n\t  function checkEmail(email) {\r\n\t    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t    return re.test(email);\r\n\t  }\r\n\t\r\n\t  function validateEmail (e) {\r\n\t    var data =  e.data.target.data('gpa');\r\n\t    var $this = $(this);\r\n\t    var $container = $this.closest('[data-gpa=email-wrap]');\r\n\t\r\n\t    //if email is valid\r\n\t    if (checkEmail($this.val())) {\r\n\t      $container.removeClass('gpa-invalid-email');\r\n\t      $('[data-gpa=email-msg]', $container).hide();\r\n\t      $('[data-gpa=email-send-btn]', $container).removeAttr('disabled');\r\n\t      return data.is_valid_email = true;\r\n\t    }\r\n\t\r\n\t    //if email is not valid\r\n\t    $container.addClass('gpa-invalid-email');\r\n\t    $('[data-gpa=email-msg]', $container).show();\r\n\t    $('[data-gpa=email-send-btn]', $container).attr('disabled','disabled');\r\n\t    return data.is_valid_email = false;\r\n\t  };\r\n\t\r\n\t  //handler: show error if empty fields\r\n\t  function validateFields (e) {\r\n\t    var form = $(this).attr('data-gpa-college') ? 'data-gpa-college' : 'data-gpa-hschool';\r\n\t    var $container = $(this).closest('['+form+'=form-wrap]');\r\n\t    var result = +$container.find('['+form+'=result]').text();\r\n\t    var $first_row = $container.find('['+form+'=fields-row]').first();\r\n\t    var $elements = $('['+form+'=grade], ['+form+'=credits], ['+form+'=courses], ['+form+'=course-types]', $first_row);\r\n\t\r\n\t    //if result is \"not 0\" & was event \"change\" after input/select of value\r\n\t    if (result && e.data.error === 'hide') {\r\n\t      $elements.removeClass('gpa-empty-data');\r\n\t      return true;\r\n\t    }\r\n\t    //if result is \"0\" & was event \"ckick\" on calculate btn\r\n\t    else if (!result && e.data.error === 'show') {\r\n\t      $elements.addClass('gpa-empty-data');\r\n\t    }\r\n\t    return false;\r\n\t  }\r\n\t  //handler: send email\r\n\t  function sendEmail (e) {\r\n\t    var data =  e.data.target.data('gpa');\r\n\t    //console.log( $(data.target).find('[data-gpa-calculator]').attr(form);\r\n\t\r\n\t    //send only if valid email\r\n\t    if (!data.is_valid_email) return false;\r\n\t    var $container = $(this).closest('[data-gpa-calculator]');\r\n\t\r\n\t    var email = $(this).closest('[data-gpa=email-wrap]').find('[data-gpa=email]').val();\r\n\t    var form_name = $container.attr('data-gpa-calculator');\r\n\t    var result = $container.find('[data-gpa-college=common-result]').first().text() ||\r\n\t                 $container.find('[data-gpa-hschool=result]').text();\r\n\t\r\n\t    $.ajax({\r\n\t      url: \"/wp-content/special/save-leads.php\",\r\n\t      method: \"POST\",\r\n\t      data: {\r\n\t        email: email,\r\n\t        form: form_name,\r\n\t        result: result\r\n\t      }\r\n\t    })\r\n\t    .done(function(){\r\n\t      var $container = data.target;\r\n\t\r\n\t      //show calculate btns\r\n\t      $('[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', $container).show();\r\n\t\r\n\t      //show result blocks (remove class \"gpa-result-disabled\")\r\n\t      $('[data-gpa-college=result-block], [data-gpa-hschool=result-block]', $container).removeClass('gpa-result-disabled');\r\n\t\r\n\t      //show college common-result-block if semesters more then 1\r\n\t      if ($container.find('[data-gpa-college=semester]').length > 1) {\r\n\t        $('[data-gpa-college=common-result-block]', $container).show();\r\n\t      }\r\n\t\r\n\t      //remove email field\r\n\t      $('[data-gpa=email-wrap]', $container).remove();\r\n\t\r\n\t      //set data in localStorage: gpa_is_sent_email : true\r\n\t      localStorage.setItem(\"gpa_is_sent_email\", JSON.stringify(true));\r\n\t      return data.is_sent_email = true;\r\n\t    })\r\n\t  };\r\n\t\r\n\t})( jQuery );\r\n\t\r\n\t//init plugin\r\n\t$('#gpa-college, .gpa-college').gpaCalculator({form: 'college'});\r\n\t$('#gpa-high-school, .gpa-high-school').gpaCalculator({form: 'high-school'});\r\n\t$('#gpa-all-widgets, .gpa-all-widgets').gpaCalculator({form: 'all-widgets'});\r\n\t\r\n\t}.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(1)))});\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** gpa-calculator.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".gpa-calculator.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wp-content/special/gpa-calculator/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 884cffb525bddc339eff\n **/","require([ \"underscore\", \"jquery\", \"selectize\"], function () {\r\n\r\nrequire('./views/main.less');\r\n\r\n//$.fn.gpaCalculator plugin\r\n(function( $ ){\r\n  //DATA\r\n  //--------------------------------------------------\r\n  var GPA_data = {\r\n    grade : require('./data/grade.js'),\r\n    courses : require('./data/courses.js'),\r\n    course_types:  require('./data/course-types.js')\r\n  }\r\n\r\n  var GPA_tpl = {\r\n    college : require('./views/college/college.html'),\r\n    college_class : require('./views/college/college-class.html'),\r\n    college_semester :  require('./views/college/college-semester.html'),\r\n\r\n    hschool : require('./views/hschool/hschool.html'),\r\n    hschool_course: require('./views/hschool/hschool-course.html'),\r\n\r\n    email: require('./views/email.html')\r\n  }\r\n\r\n  var selectizePlugin;\r\n\r\n  //METHODS\r\n  //--------------------------------------------------\r\n  var methods = {\r\n    init : function( options ) {\r\n      var settings = $.extend( {\r\n        form : 'college' // college, high-school, all-widgets\r\n      }, options);\r\n\r\n      return this.each(function() {\r\n        var $this = $(this);\r\n        var data = $this.data('gpa');\r\n\r\n        if ( data ) return false;\r\n\r\n        $this.data('gpa', {\r\n          target: $this,\r\n          is_sent_email: JSON.parse(localStorage.getItem(\"gpa_is_sent_email\")) || false, //get data from localStorage\r\n          is_valid_email: false,\r\n          common_result: '',\r\n          semester_id: 1\r\n        });\r\n\r\n        var widget = $('<div/>');\r\n\r\n        data = $this.data('gpa');\r\n\r\n        if (settings.form === 'college' || settings.form === 'all-widgets') {\r\n          //apply college template\r\n          var college_tpl = GPA_tpl.college;\r\n          var params = {\r\n            grade: GPA_data.grade,\r\n            tpl_semester: GPA_tpl.college_semester,\r\n            tpl_class: GPA_tpl.college_class\r\n          };\r\n\r\n          widget.append(college_tpl(params));\r\n\r\n          //handler: add new class (college)\r\n          $this.on('click.gpa', '[data-gpa-college=add-class-btn]', addCollegeClass);\r\n\r\n          //handler: add new semester (college)\r\n          var params = {\r\n            target: data.target,\r\n            semester_id: data.semester_id\r\n          };\r\n          $this.on('click.gpa', '[data-gpa-college=add-semester-btn]', params, addCollegeSemester);\r\n\r\n          //handler: remove semester (college)\r\n          $this.on('click.gpa', '[data-gpa-college=remove-semester-btn]', removeCollegeSemester);\r\n\r\n          //handler: calculate GPA for 1 semester (college)\r\n          $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits]', calculateCollegeGPA);\r\n          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa=email-send-btn]', calculateCollegeGPA);\r\n\r\n          //handler: calculate GPA for all semesters (college)\r\n          var params = {\r\n            target: data.target,\r\n            calculate_common_result: true\r\n          };\r\n          $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits]', params, calculateCollegeGPA);\r\n          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-college=remove-semester-btn]', params, calculateCollegeGPA);\r\n\r\n          //hendler: allow input only of numbers in the field of gpa-credits\r\n          $this.on('keypress.gpa', '[data-gpa-college=credits]', checkNumber);\r\n        }\r\n\r\n        if (settings.form === 'high-school' || settings.form === 'all-widgets') {\r\n          //apply high-school template\r\n          var high_school_tpl = GPA_tpl.hschool;\r\n          var params = {\r\n            grade: GPA_data.grade,\r\n            courses: GPA_data.courses,\r\n            course_types: GPA_data.course_types,\r\n            tpl_course: GPA_tpl.hschool_course\r\n          };\r\n\r\n          widget.append(high_school_tpl(params));\r\n\r\n          //handler: add new course (hschool)\r\n          $this.on('click.gpa', '[data-gpa-hschool=add-course-btn]', addHSchoolCourse);\r\n\r\n          //handler: calculate GPA (hschool)\r\n          $this.on('change.gpa', '[data-gpa-hschool=grade], [data-gpa-hschool=course-types]', calculateHScoolGPA);\r\n          $this.on('click.gpa', '[data-gpa-hschool=calculate-btn]', calculateHScoolGPA);\r\n        }\r\n\r\n        //handler: show error if empty fields\r\n        var params = {\r\n          error: 'show'\r\n        };\r\n        $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', params, validateFields);\r\n        var params = {\r\n          error: 'hide'\r\n        };\r\n        $this.on('change.gpa', '[data-gpa-college=grade], [data-gpa-college=credits], [data-gpa-hschool=grade], [data-gpa-hschool=course-types]', params, validateFields);\r\n\r\n        //if user didn't send the email yet (get data from localStorage)\r\n        if (!data.is_sent_email) {\r\n          //hide GPA result blocks\r\n          $('[data-gpa-college=result-block], [data-gpa-hschool=result-block]', widget).addClass(\"gpa-result-disabled\");\r\n\r\n          //handler: show email field\r\n          var params = {\r\n            target: data.target\r\n          };\r\n          $this.on('click.gpa', '[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', params, showEmailField);\r\n\r\n          //handler: show error if email not valid\r\n          var params = {\r\n            target: data.target\r\n          };\r\n          $this.on('keyup.gpa', '[data-gpa=email]', params, validateEmail);\r\n\r\n          //handler: send email\r\n          var params = {\r\n            target: data.target\r\n          };\r\n          $this.on('click.gpa', '[data-gpa=email-send-btn]', params, sendEmail);\r\n          $this.on('keydown.gpa', '[data-gpa=email]', params, function(e) {\r\n            if (e.keyCode === 13) sendEmail.bind(this)(e);\r\n          });\r\n        }\r\n\r\n        //render\r\n        $this.html(widget.contents());\r\n\r\n        //init selectize jquery plugin\r\n        selectizePlugin = initSelectizePlugin.bind($this)();\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  $.fn.gpaCalculator = function( method ) {\r\n    if ( methods[method] ) {\r\n      return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));\r\n    } else if ( typeof method === 'object' || ! method ) {\r\n      return methods.init.apply( this, arguments );\r\n    } else {\r\n      $.error( 'Method ' + method + ' does not exist on jQuery.gpaCalculator' );\r\n    }\r\n  };\r\n\r\n  //INIT SELECTIZE JQUERY PLUGIN\r\n  //--------------------------------------------------\r\n  function initSelectizePlugin () {\r\n    var grade_opts = {\r\n      options: GPA_data.grade,\r\n      optgroups: [\r\n        {value: 'A', label: 'A'},\r\n        {value: 'B', label: 'B'},\r\n        {value: 'C', label: 'C'},\r\n        {value: 'D', label: 'D'},\r\n        {value: 'F', label: 'F'}\r\n      ],\r\n      valueField: 'value',\r\n      labelField: 'label',\r\n      searchField: 'label',\r\n      sortField: 'id',\r\n      optgroupField:'group',\r\n      plugins: ['optgroup_columns'],\r\n    };\r\n\r\n    $('[data-gpa-college=grade], [data-gpa-hschool=grade]', $(this)).selectize(grade_opts);\r\n\r\n    var courses_opts = {\r\n      options: GPA_data.courses,\r\n      valueField: 'id',\r\n      labelField: 'label',\r\n      searchField: 'label',\r\n      create: true\r\n    };\r\n\r\n    $('[data-gpa-hschool=courses]', $(this)).selectize(courses_opts);\r\n\r\n    var course_types_opts = {\r\n      options: GPA_data.course_types,\r\n      valueField: 'value',\r\n      labelField: 'label',\r\n      searchField: 'label'\r\n    };\r\n\r\n    $('[data-gpa-hschool=course-types]', $(this)).selectize(course_types_opts);\r\n\r\n    return {\r\n      init: function(new_tpl) {\r\n        $(new_tpl).find('[data-gpa-college=grade], [data-gpa-hschool=grade]').selectize(grade_opts);\r\n        $(new_tpl).find('[data-gpa-hschool=courses]').selectize(courses_opts);\r\n        $(new_tpl).find('[data-gpa-hschool=course-types]').selectize(course_types_opts);\r\n      }\r\n    }\r\n  }\r\n\r\n  //HANDLERS\r\n  //--------------------------------------------------\r\n  //handler: add new class (college)\r\n  function addCollegeClass () {\r\n    var $container = $(this).closest('[data-gpa-college=form-wrap]').find('[data-gpa-college=classes-wrap]');\r\n    var params = {\r\n      class_id: ++$container.children().length,\r\n      grade: GPA_data.grade\r\n    };\r\n    var tpl = GPA_tpl.college_class(params);\r\n    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n    $container.append(tpl);\r\n\r\n    //selectize plugin init for new elements\r\n    if (selectizePlugin) selectizePlugin.init(tpl);\r\n  };\r\n\r\n  //handler: add new semester (college)\r\n  function addCollegeSemester (e) {\r\n    var $container = $(this).closest('[data-gpa-college=semesters-wrap]');\r\n    var params = {\r\n      semester_id: ++e.data.semester_id,\r\n      grade: GPA_data.grade,\r\n      tpl_class: GPA_tpl.college_class\r\n    };\r\n    var tpl = GPA_tpl.college_semester(params);\r\n    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n    $container.append(tpl);\r\n\r\n    //change \"Add semester\" btn to \"Remove semester\"\r\n    $(this).text('Remove semester').removeAttr('data-gpa-college').attr('data-gpa-college','remove-semester-btn');\r\n\r\n    var data =  e.data.target.data('gpa');\r\n\r\n    //fide result for new semester if user didn't send the email yet\r\n    if (!data.is_sent_email) {\r\n      $('[data-gpa-college=result-block]', $container).addClass('gpa-result-disabled');\r\n    }\r\n\r\n    //show common result for all semesters\r\n    if (data.is_sent_email && $container.children().length > 1) {\r\n      $('[data-gpa-college=common-result-block]', $container).show()\r\n      .find('[data-gpa-college=common-result]').text(data.common_result);\r\n    }\r\n\r\n    //selectize plugin init for new elements\r\n    if (selectizePlugin) selectizePlugin.init(tpl);\r\n  }\r\n\r\n  //handler: remove semester (college)\r\n  function removeCollegeSemester () {\r\n    var $semester = $(this).closest('[data-gpa-college=semester]');\r\n    var $container = $semester.closest('[data-gpa-calculator=college]');\r\n    $semester.remove();\r\n\r\n    if ($container.find('[data-gpa-college=semesters-wrap]').children().length === 1) {\r\n      $('[data-gpa-college=common-result-block]', $container).hide();\r\n    }\r\n  }\r\n\r\n  //handler: calculate GPA (college)\r\n  //for 1 or all semesters\r\n  function calculateCollegeGPA (e) {\r\n    //define what data will be counted and where the result will be written\r\n    var calculate_common_result = e.data && e.data.calculate_common_result;\r\n\r\n    if (calculate_common_result) {\r\n      var data =  e.data.target.data('gpa');\r\n      var $container =  e.data.target.data('gpa').target.find('[data-gpa-calculator=college]');\r\n      var $result = $('[data-gpa-college=common-result]', $container);\r\n    } else {\r\n      var $container = $(this).closest('[data-gpa-college=form-wrap]');\r\n      var $result = $('[data-gpa-college=result]', $container);\r\n    }\r\n\r\n    //save data in a temporary storage\r\n    var tmp = {};\r\n    tmp.grade = [];\r\n    tmp.credits = [];\r\n\r\n    $('[data-gpa-college=fields-row]', $container).each(function(i, elem){\r\n      tmp.grade[i] = +$('[data-gpa-college=grade]', this).val();\r\n      tmp.credits[i] = +$('[data-gpa-college=credits]', this).val();\r\n    });\r\n\r\n    //calculating\r\n    var count = tmp.grade.length,\r\n      total = 0,\r\n      total_credits = 0,\r\n      gpa_result = 0;\r\n\r\n    while (count){\r\n      count--;\r\n      if (!tmp.grade[count] || !tmp.credits[count]) continue;\r\n      total += tmp.grade[count]*tmp.credits[count];\r\n      total_credits += tmp.credits[count];\r\n    }\r\n\r\n    gpa_result = Math.round(parseFloat(total/total_credits) * 100) / 100 || 0;\r\n    gpa_result = gpa_result.toFixed(2);\r\n\r\n    //show result\r\n    $result.text(gpa_result);\r\n\r\n    //save common result in \"data\" property of the target element\r\n    if (calculate_common_result) data.common_result = gpa_result;\r\n  };\r\n\r\n  //handler: allow input only of numbers in the field of gpa-credits\r\n  function checkNumber (e) {\r\n    return (/[0-9]/.test(String.fromCharCode(e.charCode)));\r\n  }\r\n\r\n  //handler: add new course (hschool)\r\n  function addHSchoolCourse () {\r\n    var $container = $(this).closest('[data-gpa-hschool=form-wrap]').find('[data-gpa-hschool=courses-wrap]');\r\n    var params = {\r\n      grade: GPA_data.grade,\r\n      courses: GPA_data.courses,\r\n      course_types: GPA_data.course_types,\r\n      course_id: ++$container.children().length\r\n    };\r\n    var tpl = GPA_tpl.hschool_course(params);\r\n    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n    $container.append(tpl);\r\n\r\n    //selectize plugin init for new elements\r\n    if (selectizePlugin) selectizePlugin.init(tpl);\r\n  };\r\n\r\n  //handler: calculate GPA (hschool)\r\n  function calculateHScoolGPA () {\r\n    var $container = $(this).closest('[data-gpa-hschool=form-wrap]');\r\n\r\n    //save data in a temporary storage\r\n    var data = {};\r\n    data.grade = [];\r\n    data.course_types = [];\r\n\r\n    var $courses = $container.find('[data-gpa-hschool=courses-wrap]');\r\n\r\n    $('[data-gpa-hschool=fields-row]', $courses).each(function(i, elem){\r\n      data.grade[i] = +$('[data-gpa-hschool=grade]', this).val();\r\n      data.course_types[i] = +$('[data-gpa-hschool=course-types]', this).val();\r\n    });\r\n\r\n    //calculating\r\n    var count = data.grade.length,\r\n      total = 0,\r\n      total_courses = 0,\r\n      gpa_result = 0;\r\n\r\n    while (count){\r\n      count--;\r\n      if (!data.grade[count]) continue;\r\n      total += data.grade[count]+data.course_types[count];\r\n      total_courses += 1;\r\n    }\r\n    gpa_result = Math.round(parseFloat(total/total_courses) * 100) / 100 || 0;\r\n    gpa_result = gpa_result.toFixed(2)\r\n\r\n    //show result\r\n    $('[data-gpa-hschool=result]', $container).text(gpa_result);\r\n  };\r\n\r\n  //handler: show email field\r\n  function showEmailField (e) {\r\n    var data =  e.data.target.data('gpa');\r\n\r\n    //show field with email only once (before showing result)\r\n    if (data.is_sent_email) return false;\r\n\r\n    //define in what container the \"calculate\" btn was clicked\r\n    var form = $(this).attr('data-gpa-college') ? 'data-gpa-college' : 'data-gpa-hschool';\r\n    var $container = $(this).closest('['+form+'=form-wrap]');\r\n\r\n    //show email field\r\n    var tpl = GPA_tpl.email;\r\n    tpl = $('<div/>').html(tpl).contents(); //convert string to html DOM\r\n    $('['+form+'=calculate-btn]', $container).hide().after(tpl);\r\n  };\r\n\r\n  //handler: show error if email not valid\r\n  function checkEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  function validateEmail (e) {\r\n    var data =  e.data.target.data('gpa');\r\n    var $this = $(this);\r\n    var $container = $this.closest('[data-gpa=email-wrap]');\r\n\r\n    //if email is valid\r\n    if (checkEmail($this.val())) {\r\n      $container.removeClass('gpa-invalid-email');\r\n      $('[data-gpa=email-msg]', $container).hide();\r\n      $('[data-gpa=email-send-btn]', $container).removeAttr('disabled');\r\n      return data.is_valid_email = true;\r\n    }\r\n\r\n    //if email is not valid\r\n    $container.addClass('gpa-invalid-email');\r\n    $('[data-gpa=email-msg]', $container).show();\r\n    $('[data-gpa=email-send-btn]', $container).attr('disabled','disabled');\r\n    return data.is_valid_email = false;\r\n  };\r\n\r\n  //handler: show error if empty fields\r\n  function validateFields (e) {\r\n    var form = $(this).attr('data-gpa-college') ? 'data-gpa-college' : 'data-gpa-hschool';\r\n    var $container = $(this).closest('['+form+'=form-wrap]');\r\n    var result = +$container.find('['+form+'=result]').text();\r\n    var $first_row = $container.find('['+form+'=fields-row]').first();\r\n    var $elements = $('['+form+'=grade], ['+form+'=credits], ['+form+'=courses], ['+form+'=course-types]', $first_row);\r\n\r\n    //if result is \"not 0\" & was event \"change\" after input/select of value\r\n    if (result && e.data.error === 'hide') {\r\n      $elements.removeClass('gpa-empty-data');\r\n      return true;\r\n    }\r\n    //if result is \"0\" & was event \"ckick\" on calculate btn\r\n    else if (!result && e.data.error === 'show') {\r\n      $elements.addClass('gpa-empty-data');\r\n    }\r\n    return false;\r\n  }\r\n  //handler: send email\r\n  function sendEmail (e) {\r\n    var data =  e.data.target.data('gpa');\r\n    //console.log( $(data.target).find('[data-gpa-calculator]').attr(form);\r\n\r\n    //send only if valid email\r\n    if (!data.is_valid_email) return false;\r\n    var $container = $(this).closest('[data-gpa-calculator]');\r\n\r\n    var email = $(this).closest('[data-gpa=email-wrap]').find('[data-gpa=email]').val();\r\n    var form_name = $container.attr('data-gpa-calculator');\r\n    var result = $container.find('[data-gpa-college=common-result]').first().text() ||\r\n                 $container.find('[data-gpa-hschool=result]').text();\r\n\r\n    $.ajax({\r\n      url: \"/wp-content/special/save-leads.php\",\r\n      method: \"POST\",\r\n      data: {\r\n        email: email,\r\n        form: form_name,\r\n        result: result\r\n      }\r\n    })\r\n    .done(function(){\r\n      var $container = data.target;\r\n\r\n      //show calculate btns\r\n      $('[data-gpa-college=calculate-btn], [data-gpa-hschool=calculate-btn]', $container).show();\r\n\r\n      //show result blocks (remove class \"gpa-result-disabled\")\r\n      $('[data-gpa-college=result-block], [data-gpa-hschool=result-block]', $container).removeClass('gpa-result-disabled');\r\n\r\n      //show college common-result-block if semesters more then 1\r\n      if ($container.find('[data-gpa-college=semester]').length > 1) {\r\n        $('[data-gpa-college=common-result-block]', $container).show();\r\n      }\r\n\r\n      //remove email field\r\n      $('[data-gpa=email-wrap]', $container).remove();\r\n\r\n      //set data in localStorage: gpa_is_sent_email : true\r\n      localStorage.setItem(\"gpa_is_sent_email\", JSON.stringify(true));\r\n      return data.is_sent_email = true;\r\n    })\r\n  };\r\n\r\n})( jQuery );\r\n\r\n//init plugin\r\n$('#gpa-college, .gpa-college').gpaCalculator({form: 'college'});\r\n$('#gpa-high-school, .gpa-high-school').gpaCalculator({form: 'high-school'});\r\n$('#gpa-all-widgets, .gpa-all-widgets').gpaCalculator({form: 'all-widgets'});\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/gpa-calculator.js\n ** module id = 0\n ** module chunks = 1\n **/"],"sourceRoot":""}